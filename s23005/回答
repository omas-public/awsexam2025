問1 host1のネットワークアドレス、IPアドレス、ルーティングテーブルを答えよ
ネットワークアドレス：192.168.10.64/26
IPアドレス：192.168.10.65
ゲートウェイ0.0.0.0/0

問2 router1のネットワークアドレス、IPアドレス、ルーティングテーブルをすべて答えよ
ネットワークアドレス : 192.168.10.64/26
IPアドレス : 192.168.10.66
ルーティングテーブル : 192.168.10.192/26

問3 router2のネットワークアドレス、IPアドレス、ルーティングテーブルをすべて答えよ
ネットワークアドレス : 192.168.10.128/26
IPアドレス : 192.168.10.130
ルーティングテーブル : 192.168.10.64/26

問4 host2のネットワークアドレス、IPアドレス、ルーティングテーブルを答えよ
ネットワークアドレス：192.168.10.192/26
IPアドレス : 192.168.10.194
ルーティングテーブル : 0.0.0.0/0

問5 AWS上にWordPressを構築し、その構築手順書とWordpressの画面のスクショを提出せよ

# AWS WordPress 構築手順書
## 1. VPC の作成
1. AWS コンソールにログイン
2. 「VPC」を検索して開く
3. 左メニューの「VPC ダッシュボード」 > 「VPC を作成」をクリック
4. 以下の内容で入力：
   * **名前タグ**: Kadai-vpc
   * **IPv4 CIDR ブロック**: 10.0.0.0/16
5. 「VPC など」を選択して、以下の 4 つのサブネットを同時に作成：
   * パブリックサブネット: 192.168.10.0/28（名前: Kadai-Public1）
   * パブリックサブネット2: 192.168.10.16/28（名前: Kadai-Public2）
   * プライベートサブネット: 192.168.10.128/28（名前: Kadai-Private1）
   * プライベートサブネット2:192.168.10.144/28（名前: Kadai-Private2）
## 2. インターネットゲートウェイの作成
1. 左メニューから「インターネットゲートウェイ」を開く
2. 「作成」をクリックし、名前タグに `Kadai-igw` を入力
3. 作成後、「アクション > VPC にアタッチ」を選択し、先ほど作成した「VPC領域」を選択
## 3. ルートテーブルの作成と関連付け
1. 「ルートテーブル」から新規作成
   * **Kadai-rtb-public** を作成し、以下のルートを追加：
     * 送信先: 0.0.0.0/0、ターゲット: `igw-0dbfa15dd77fd3103`
     * サブネットの関連付け:  Kadai-Public1（192.168.10.0/28）、
  Kadai-Public2（192.168.10.16/28）
2. プライベートサブネット用に下記のルートテーブルを作成：
   * **PrivateSubnet Route Table** → サブネット: 192.168.10.0/24、192.168.10.0/24
## 4. セキュリティグループの作成
### 踏み台サーバ SG
* ポート: SSH (22)
* ソース: 0.0.0.0/0
### Web サーバ SG
* ポート: HTTP (80)、SSH (22)
* ソース:
  * HTTP: 0.0.0.0/0
  * SSH: 10.0.231.20/32（踏み台）
### DB サーバ SG
* ポート: MySQL (3306)、SSH (22)、ICMP
* ソース:
  * SSH: 10.0.231.20/32
  * MySQL: 10.0.231.20/32
  * ICMP: 10.0.231.0/24
## 5. EC2 インスタンスの作成
### humidai-kadai（踏み台サーバ）
* サブネット: Kadai-Public1(192.168.10.0/28)
* プライマリIP: 192.168.10.5
* セキュリティグループ: Kadai-humidai
### Web-Kadai（Webサーバ）
* サブネット: Kadai-Public2(192.168.10.16/28)
* プライマリIP: 192.168.10.21
* セキュリティグループ: Web-Kadai
### DB サーバ（DBサーバ）
* サブネット: 10.0.123.0/24
* プライマリIP: 10.0.123.10
* セキュリティグループ: DB サーバ SG
## 6. RDS（MariaDB） 作成
1. RDS コンソールへ移動し「データベース作成」
2. エンジン: MariaDB
3. DB インスタンス識別子: 任意
4. マスターユーザ名 / パスワードを設定
5. サブネットグループ: プライベートサブネット2つ（10.0.123.0/24, 10.0.143.0/24）
6. 接続先セキュリティグループ: DB サーバ SG
7. 最初の DB 名: `wordpress`
8. 作成後、RDS エンドポイントを控えておく
9. インバウンドルールに 0.0.0.0/0 が入っていたら、10.0.231.10 に修正
## 7. EC2 への SSH 接続とファイル転送
```bash
# 踏み台へログイン
ssh -i ~/.ssh/my-new-key.pem ec2-user@<10.0.231.20(パブリックIPv4アドレス)>
# 踏み台から Web サーバへ鍵ファイルを送信
scp -i ~/.ssh/my-new-key.pem /home/s23010/.ssh/my-new-key.pem ec2-user@<10.0.231.10(パブリックIPv4アドレス)>
### Web-Kadai（Webサーバ）
* サブネット: Kadai-Public2(192.168.10.16/28)
* プライマリIP: 192.168.10.21
* セキュリティグループ: Web-Kadai
### DB サーバ（DBサーバ）
* サブネット: 10.0.123.0/24
* プライマリIP: 10.0.123.10
* セキュリティグループ: DB サーバ SG
## 6. RDS（MariaDB） 作成
1. RDS コンソールへ移動し「データベース作成」
2. エンジン: MariaDB
3. DB インスタンス識別子: 任意
4. マスターユーザ名 / パスワードを設定
5. サブネットグループ: プライベートサブネット2つ（10.0.123.0/24, 10.0.143.0/24）
6. 接続先セキュリティグループ: DB サーバ SG
7. 最初の DB 名: `wordpress`
8. 作成後、RDS エンドポイントを控えておく
9. インバウンドルールに 0.0.0.0/0 が入っていたら、10.0.231.10 に修正
## 7. EC2 への SSH 接続とファイル転送
```bash
# 踏み台へログイン
ssh -i ~/.ssh/my-new-key.pem ec2-user@<10.0.231.20(パブリックIPv4アドレス)>
# 踏み台から Web サーバへ鍵ファイルを送信
scp -i ~/.ssh/my-new-key.pem /home/s23010/.ssh/my-new-key.pem ec2-user@<10.0.231.10(パブリックIPv4アドレス)>
